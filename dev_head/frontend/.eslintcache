[{"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\index.js":"1","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\App.js":"2","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\layout\\Landing.js":"4","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\auth\\Login.js":"5","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\auth\\Register.js":"6","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\store.js":"7","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\reducers\\index.js":"8","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\reducers\\alert.js":"9","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\types.js":"10","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\actions\\alert.js":"11","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\layout\\Alert.js":"12","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\actions\\auth.js":"13","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\reducers\\auth.js":"14","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\utils\\setAuthToken.js":"15","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\reducers\\profile.js":"18","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\actions\\profile.js":"19","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\dashboard\\DashboardActions.js":"22","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\dashboard\\Experience.js":"26","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\dashboard\\Education.js":"27","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profiles\\Profiles.js":"28","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profiles\\ProfileItem.js":"29"},{"size":142,"mtime":1612271344840,"results":"30","hashOfConfig":"31"},{"size":2371,"mtime":1613377569417,"results":"32","hashOfConfig":"31"},{"size":1515,"mtime":1613377687476,"results":"33","hashOfConfig":"31"},{"size":1136,"mtime":1612417837698,"results":"34","hashOfConfig":"31"},{"size":1999,"mtime":1612347985888,"results":"35","hashOfConfig":"31"},{"size":2899,"mtime":1612347937301,"results":"36","hashOfConfig":"31"},{"size":389,"mtime":1612327960971,"results":"37","hashOfConfig":"31"},{"size":201,"mtime":1612410810806,"results":"38","hashOfConfig":"31"},{"size":381,"mtime":1612328084503,"results":"39","hashOfConfig":"31"},{"size":694,"mtime":1613036499951,"results":"40","hashOfConfig":"31"},{"size":327,"mtime":1612330929375,"results":"41","hashOfConfig":"31"},{"size":500,"mtime":1612330533550,"results":"42","hashOfConfig":"31"},{"size":2136,"mtime":1612417111111,"results":"43","hashOfConfig":"31"},{"size":1108,"mtime":1613031923183,"results":"44","hashOfConfig":"31"},{"size":248,"mtime":1612340723478,"results":"45","hashOfConfig":"31"},{"size":1988,"mtime":1613033699343,"results":"46","hashOfConfig":"31"},{"size":654,"mtime":1612409945290,"results":"47","hashOfConfig":"31"},{"size":1038,"mtime":1613036734069,"results":"48","hashOfConfig":"31"},{"size":6010,"mtime":1614675836466,"results":"49","hashOfConfig":"31"},{"size":267,"mtime":1612418123918,"results":"50","hashOfConfig":"31"},{"size":7029,"mtime":1612575739824,"results":"51","hashOfConfig":"31"},{"size":658,"mtime":1612573802632,"results":"52","hashOfConfig":"31"},{"size":8292,"mtime":1612575707295,"results":"53","hashOfConfig":"31"},{"size":3548,"mtime":1612584284480,"results":"54","hashOfConfig":"31"},{"size":3567,"mtime":1613022540160,"results":"55","hashOfConfig":"31"},{"size":1433,"mtime":1613032937848,"results":"56","hashOfConfig":"31"},{"size":1420,"mtime":1613033091904,"results":"57","hashOfConfig":"31"},{"size":1321,"mtime":1614683091979,"results":"58","hashOfConfig":"31"},{"size":1011,"mtime":1614681777125,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1w714z8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\index.js",[],["128","129"],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\App.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\layout\\Landing.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\auth\\Login.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\auth\\Register.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\store.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\reducers\\index.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\reducers\\alert.js",["130","131","132"],"import { SET_ALERT, REMOVE_ALERT } from '../types'\r\n\r\nconst initialState = []\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case 'SET_ALERT':\r\n      return [...state, payload]\r\n    case 'REMOVE_ALERT':\r\n      return state.filter((alert) => alert.id !== payload)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\types.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\actions\\alert.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\layout\\Alert.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\actions\\auth.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\reducers\\auth.js",["133"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from '../types'\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      }\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token)\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      }\r\n\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token')\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n",["134","135"],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\utils\\setAuthToken.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\dashboard\\Dashboard.js",["136"],"import React, { useEffect, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from '../layout/Spinner'\r\nimport { connect } from 'react-redux'\r\nimport DashboardActions from './DashboardActions'\r\nimport Experience from './Experience'\r\nimport Education from './Education'\r\nimport { deleteAccount, getCurrentProfile } from '../../redux/actions/profile'\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile()\r\n  }, [])\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'>Welcome {user && user.name}</i>\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus'></i>\r\n              Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You haven't set up your profile yet. Add some info, dev head!</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n)\r\n","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\reducers\\profile.js",["137"],"import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n} from '../types'\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      }\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      }\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      }\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      }\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\redux\\actions\\profile.js",["138"],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\layout\\Spinner.js",["139"],"import React, { Fragment } from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Loading...'\r\n    />\r\n  </Fragment>\r\n)\r\n","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profile-forms\\EditProfile.js",["140"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createProfile, getCurrentProfile } from '../../redux/actions/profile'\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  })\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile()\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    })\r\n  }, [loading])\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    createProfile(formData, history, true)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n)\r\n","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profile-forms\\AddExperience.js",["141","142","143"],"import React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addExperience } from '../../redux/actions/profile'\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  })\r\n\r\n  const { company, title, location, from, to, current, description } = formData\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault()\r\n          addExperience(formData, history)\r\n        }}\r\n      >\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value=''\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current })\r\n                toggleDisabled(!toDateDisabled)\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <a class='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n  AddExperience: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addExperience })(AddExperience)\r\n","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profile-forms\\AddEducation.js",["144","145","146"],"import React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addEducation } from '../../redux/actions/profile'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  })\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value })\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add Your Education</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add a School or Bootcamp\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault()\r\n          addEducation(formData, history)\r\n        }}\r\n      >\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value=''\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current })\r\n                toggleDisabled(!toDateDisabled)\r\n              }}\r\n            />{' '}\r\n            Currently Enrolled\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <a class='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n  AddEducation: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addEducation })(AddEducation)\r\n","C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profiles\\Profiles.js",["147"],"C:\\Users\\hotco\\Documents\\Code\\dev_web\\dev_head\\frontend\\src\\components\\profiles\\ProfileItem.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":19},{"ruleId":"152","severity":1,"message":"156","line":1,"column":21,"nodeType":"154","messageId":"155","endLine":1,"endColumn":33},{"ruleId":"157","severity":1,"message":"158","line":5,"column":1,"nodeType":"159","endLine":16,"endColumn":2},{"ruleId":"157","severity":1,"message":"158","line":19,"column":1,"nodeType":"159","endLine":56,"endColumn":2},{"ruleId":"148","replacedBy":"160"},{"ruleId":"150","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":19,"column":6,"nodeType":"164","endLine":19,"endColumn":8,"suggestions":"165"},{"ruleId":"157","severity":1,"message":"158","line":18,"column":1,"nodeType":"159","endLine":57,"endColumn":2},{"ruleId":"152","severity":1,"message":"166","line":248,"column":13,"nodeType":"154","messageId":"155","endLine":248,"endColumn":16},{"ruleId":"157","severity":1,"message":"167","line":4,"column":1,"nodeType":"159","endLine":12,"endColumn":2},{"ruleId":"162","severity":1,"message":"168","line":47,"column":6,"nodeType":"164","endLine":47,"endColumn":15,"suggestions":"169"},{"ruleId":"152","severity":1,"message":"170","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":14},{"ruleId":"152","severity":1,"message":"171","line":2,"column":16,"nodeType":"154","messageId":"155","endLine":2,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":85,"column":15,"nodeType":"174","endLine":85,"endColumn":30},{"ruleId":"152","severity":1,"message":"170","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":14},{"ruleId":"152","severity":1,"message":"171","line":2,"column":16,"nodeType":"154","messageId":"155","endLine":2,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":92,"column":15,"nodeType":"174","endLine":92,"endColumn":30},{"ruleId":"162","severity":1,"message":"175","line":11,"column":6,"nodeType":"164","endLine":11,"endColumn":8,"suggestions":"176"},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'SET_ALERT' is defined but never used.","Identifier","unusedVar","'REMOVE_ALERT' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["177"],["178"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["179"],"'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["180"],"'Link' is defined but never used.","'withRouter' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"188","text":"189"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"190","text":"191"},"Update the dependencies array to be: [getProfiles]",{"range":"192","text":"193"},[593,595],"[getCurrentProfile]",[1695,1704],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[388,390],"[getProfiles]"]